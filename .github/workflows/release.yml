name: Release Builds

on: push

env:
  LIBSBML_VERSION: 'v5.19.0'
  LIBEXPAT_VERSION: 'R_2_2_10'
  SYMENGINE_VERSION: 'master'
  # symengine note: using master until next release for commit 62e0b63879
  GMP_VERSION: '6.2.0'
  SPDLOG_VERSION: 'v1.8.1'
  MUPARSER_VERSION: 'v2.3.2'
  LIBTIFF_VERSION: 'master'
  #libtiff note: we want commit bd03e1a2 which fixed libm issue with mingw,
  # but this is not in release v4.1.0, so using master branch until next release
  FMT_VERSION: '7.1.3'
  TBB_VERSION: 'v2020.3'
  OPENCV_VERSION: '4.5.0'
  CATCH2_VERSION: 'v3.0.0-preview3'
  BENCHMARK_VERSION: 'v1.5.2'

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-16.04
    env:
      INSTALL_PREFIX: '/opt/smelibs'
      SUDOCMD: 'sudo'
      OS_TARGET: 'linux'
      TBB_OPTIONS: ''
    defaults:
      run:
        shell: bash
    steps:
    - name: Set gcc version
      run: |
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100
    - uses: actions/checkout@v2
    - name: Build script
      run: ./build.sh
    - uses: actions/upload-artifact@v2
      with:
        path: ./artefacts/*

  macos:
    name: MacOS
    runs-on: macos-10.15
    env:
      INSTALL_PREFIX: '/opt/smelibs'
      SUDOCMD: 'sudo'
      MACOSX_DEPLOYMENT_TARGET: '10.14'
      OS_TARGET: 'osx'
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: Build script
        run: ./build.sh
      - uses: actions/upload-artifact@v2
        with:
          path: ./artefacts/*

  win64:
    name: Windows 64-bit
    runs-on: windows-2019
    env:
      INSTALL_PREFIX: '/c/smelibs'
      SUDOCMD: ''
      OS_TARGET: 'win64'
      TBB_OPTIONS: 'compiler=gcc arch=intel64 tbb_os=linux'
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v2
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: mingw-w64-x86_64-gcc mingw-w64-x86_64-cmake mingw-w64-x86_64-python make m4 git
      - name: Build script
        run: ./build.sh
      - uses: actions/upload-artifact@v2
        with:
          path: ./artefacts/*

  win32:
    name: Windows 32-bit
    runs-on: windows-2019
    env:
      INSTALL_PREFIX: '/c/smelibs'
      SUDOCMD: ''
      OS_TARGET: 'win32'
      TBB_OPTIONS: 'compiler=gcc arch=intel32 tbb_os=linux'
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v2
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW32
          update: true
          install: mingw-w64-i686-gcc mingw-w64-i686-cmake mingw-w64-i686-python make m4 git
      - name: Build script
        run: ./build.sh
      - uses: actions/upload-artifact@v2
        with:
          path: ./artefacts/*

  release:
    name: Upload Binaries to GitHub Release
    needs: [linux, macos, win64, win32]
    runs-on: ubuntu-18.04
    # upload binaries to github release if commit is tagged
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: binaries
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: binaries/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
